version: 2.1

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

executors:
  py27:
    docker:
      - image: circleci/python:2.7

  py36:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/cloudify-nsx-t-plugin

commands:
  check_py3_compat:
    steps:
      - run:
          name: install futurize
          command: pip install future --user
      - run:
          name: remove compat module
          command: rm nsx_t_sdk/_compat.py
      - run:
          name: find python3-incompatible code
          command: |
            FUTURIZE="futurize ."
            while read line; do
              [[ "$line" =~ ^#.* ]] && continue
              FUTURIZE="${FUTURIZE} ${line}"
            done<.circleci/py3fixers
            echo "Running: $FUTURIZE"
            $FUTURIZE>futurize_diffs
      - run:
          name: check that there is no python3-incompatible code
          command: |
            if [[ -s futurize_diffs ]]; then
              echo "Python-3-incompatible code found"
              cat futurize_diffs
              exit 1
            fi

  run_flake8:
    steps:
      - run: pip install --user flake8
      - run: python -m flake8

  run_unittest:
    steps:
      - run:
         name: Create virtualenv venv
         command: virtualenv ~/venv
      - run: |
            ~/venv/bin/pip install -Ur test-requirements.txt
            ~/venv/bin/pip install -Ur dev-requirements.txt

      - run: |
          ~/venv/bin/nosetests \
           --nocapture \
           --cover-html \
           --with-coverage \
           --cov-report term-missing \
           --cover-package=nsx_t_plugin nsx_t_plugin/tests \
           --cover-package=nsx_t_sdk nsx_t_sdk/tests \
           --with-xunit --xunit-file=nosetests.xml


jobs:
  py3_compat:
    executor: py27
    steps:
      - checkout
      - check_py3_compat

  unittests_py27:
    executor: py27
    steps:
      - checkout
      - run_flake8
      - run_unittest

  unittests_py36:
    executor: py36
    steps:
      - checkout
      - run_flake8
      - run_unittest

workflows:
  version: 2
  tests:
    jobs:
      - py3_compat
      - unittests_py27
      - unittests_py36:
          requires:
            - py3_compat
